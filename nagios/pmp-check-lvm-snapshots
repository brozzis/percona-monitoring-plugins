#!/bin/sh

# ########################################################################
# This program is part of $PROJECT_NAME$
# License: GPL License (see COPYING)
# Authors:
#  Baron Schwartz
# ########################################################################

# ########################################################################
# Redirect STDERR to STDOUT; Nagios doesn't handle STDERR.
# ########################################################################
exec 2>&1

# ########################################################################
# Set up constants, etc.
# ########################################################################
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4
EXITSTATUS=$STATE_OK

# ########################################################################
# Print the name and fullness of every LVM snapshot that is open and
# nearly full.  The input is the filename and the allowable fullness.
# ########################################################################
check_lvm_snapshot_fullness() {
   local FILE="$1"
   local FULL="$2"
   awk -v full="$FULL" '$1 != "LV" && $6 > full {print $5 "=" $6 "%"}' "${FILE}"
}

# ########################################################################
# Run the program.
# ########################################################################
main() {

   # Get options
   for o; do
      case "${o}" in
         -w)        shift; OPT_WARN="${1}"; shift; ;;
         -c)        shift; OPT_CRIT="${1}"; shift; ;;
         --version) grep -A2 '^=head1 VERSION' "$0" | tail -n1; exit 0 ;;
         --help)    perl -00 -ne 'm/^  Usage:/ && print' "$0"; exit 0 ;;
         -*)        echo "Unknown option ${o}.  Try --help."; exit 1; ;;
      esac
   done
   OPT_WARN=${OPT_WARN:-90}
   OPT_CRIT=${OPT_CRIT:-95}

   local NOTE="OK no full LVM snapshot volumes"
   local TEMP=$(mktemp "/tmp/$(basename "$0").XXXX") || exit $?
   trap 'rm -rf "${TEMP}" >/dev/null 2>&1' EXIT
   lvs > "${TEMP}" || exit $?
   local VOLS=$(check_lvm_snapshot_fullness "${TEMP}" "${OPT_CRIT}")
   if [ "${VOLS}" ]; then
      NOTE="CRIT LVM snapshot volumes over ${FULL}% full: ${VOLS}"
      EXITSTATUS=$STATE_CRITICAL
   else
      VOLS=$(check_lvm_snapshot_fullness "${TEMP}" "${OPT_WARN}")
      if [ "${VOLS}" ]; then
         NOTE="WARN LVM snapshot volumes over ${FULL}% full: ${VOLS}"
         EXITSTATUS=$STATE_WARNING
      fi
   fi
   echo $NOTE
   exit $EXITSTATUS
}

# ########################################################################
# Execute the program if it was not included from another file.
# This makes it possible to include without executing, and thus test.
# ########################################################################
if    [ "$(basename -- "$0")" = "pmp-check-lvm-snapshots" ] \
   || [ "$(basename -- "$0")" = "bash" -a "$_" = "$0" ]; then
   main "$@"
fi

# ############################################################################
# Documentation
# ############################################################################
: <<'DOCUMENTATION'
=pod

=head1 NAME

pmp-check-lvm-snapshots - Alert when LVM snapshots are running out of copy-on-write space.

=head1 SYNOPSIS

  Usage: pmp-check-lvm-snapshots [OPTIONS]
  Options:
    -c CRIT     Critical threshold; default 95%.
    -w WARN     Warning threshold; default 90%.
    --help      Print help and exit.
    --version   Print version and exit.
   Use perldoc to read embedded documentation with more details.

=head1 DESCRIPTION

This Nagios plugin looks at the output of the 'lvs' command to find LVM snapshot volumes
that are beginning to run out of copy-on-write space. If a snapshot fills up its
copy-on-write space, it will fail.  This is also a useful way to detect whether
some process, such as a backup, failed to release a snapshot volume after
finishing with it.

=head1 DOWNLOADING

Visit L<http://www.percona.com/software/percona-monitoring-plugins/> to download
the latest release of Percona Monitoring Plugins.

=head1 AUTHORS

Baron Schwartz

=head1 COPYRIGHT, LICENSE, AND WARRANTY

This program is copyright 2012 Baron Schwartz, 2012 Percona Inc.
Feedback and improvements are welcome.

THIS PROGRAM IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, version 2; OR the Perl Artistic License.  On UNIX and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA  02111-1307  USA.

=head1 VERSION

Percona Monitoring Plugins pmp-check-lvm-snapshots 1.0.0

=cut

DOCUMENTATION
