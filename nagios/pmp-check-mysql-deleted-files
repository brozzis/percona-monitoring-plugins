#!/bin/sh

# ########################################################################
# This program is part of $PROJECT_NAME$
# License: GPL License (see COPYING)
# Authors:
#  Baron Schwartz
# ########################################################################

# Set up constants, etc.
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4
EXITSTATUS=$STATE_OK

# ########################################################################
# Run the program.
# ########################################################################
main() {

   # Get command-line options
   for o; do
      case "${o}" in
         -w)        shift; OPT_WARN="${1}"; shift; ;;
         -c)        shift; OPT_CRIT="${1}"; shift; ;;
         --version) grep -A2 '^=head1 VERSION' "$0" | tail -n1; exit 0 ;;
         --help)    perl -00 -ne 'm/^  Usage:/ && print' "$0"; exit 0 ;;
         -*)        echo "Unknown command-line option ${o}.  Try --help." >&2; exit 1; ;;
      esac
   done
   OPT_WARN=${OPT_WARN:-90}
   OPT_CRIT=${OPT_CRIT:-95}

   local NOTE="OK no deleted files"
   local PROC_ID=$(_pidof mysqld | head -n1)
   if [ "${PROC_ID}" ]; then
      local TEMP=$(mktemp "/tmp/$(basename "$0").XXXX") || exit $?
      trap 'rm -rf "${TEMP}" >/dev/null 2>&1' EXIT
      _lsof "${PROC_ID}" > "${TEMP}" || exit $?
      local FILES=$(check_deleted_files "${TEMP}")
      if [ "${FILES}" -a -z "${OPT_WARN}" ]; then
         NOTE="CRIT open but deleted files: ${FILES}"
         EXITSTATUS=$STATE_CRITICAL
      elif [ "${FILES}" ]; then
         NOTE="WARN open but deleted files: ${FILES}"
         EXITSTATUS=$STATE_WARNING
      fi
   else
      NOTE="UNK could not find a mysqld process"
      EXITSTATUS=$STATE_UNKNOWN
   fi
   echo $NOTE
   exit $EXITSTATUS
}

# ########################################################################
# A wrapper around pidof, which might not exist. The first argument is the
# command name to match.
# ########################################################################
_pidof() {
   if ! pidof "${1}" 2>/dev/null; then
      ps -eo pid,ucomm | awk -v comm="${1}" '$2 == comm { print $1 }'
   fi
}

# ########################################################################
# A wrapper around lsof, which might not exist. The first argument is the
# process ID to match.  This is Linux-centric; the fallback of listing
# /proc/pid/fd will probably only work on Linux.
# ########################################################################
_lsof() {
   if ! lsof -p $1 2>/dev/null; then
      /bin/ls -l /proc/$1/fd 2>/dev/null
   fi
}

# ########################################################################
# Generate a list of file handles that MySQL has open, but which are deleted,
# and are not temp files such as /tmp/ib* files (InnoDB) or /tmp/ML* files
# (binary logging).  The first argument is a file containing the output of lsof
# or ls -l for the open files.
# ########################################################################
check_deleted_files() {
   awk '/\(deleted\)/ { if ( $0 !~ /\/tmp\// ) {
      if ( $NF ~ /deleted/ ) {
         lf=NF-1;
      }
      else {
         lf=NF;
      }
      print $lf;
   }}' "${1}"
}

# ########################################################################
# Execute the program if it was not included from another file.
# This makes it possible to include without executing, and thus test.
# ########################################################################
if    [ "$(basename -- "$0")" = "pmp-check-mysql-deleted-files" ] \
   || [ "$(basename -- "$0")" = "bash" -a "$_" = "$0" ]; then
   main "$@"
fi

# ############################################################################
# Documentation
# ############################################################################
: <<'DOCUMENTATION'
=pod

=head1 NAME

pmp-check-mysql-deleted-files - Alert when MySQL's files are deleted.

=head1 SYNOPSIS

  Usage: pmp-check-mysql-deleted-files [OPTIONS]
  Options:
    -c CRIT     Critical threshold; ignored.
    -w WARN     Warning threshold; ignored.
    --help      Print help and exit.
    --version   Print version and exit.
   Use perldoc to read embedded documentation with more details.

=head1 DESCRIPTION

This Nagios plugin looks at the files that the mysqld process has open, and
warns if any of them are deleted that shouldn't be.  This typically happens when
there is a poorly written logrotate script or when a human makes a mistake at
the command line.  This can cause several bad effects. If a table has been
deleted, of course, it is a serious matter.  Such a file can also potentially
fill up the disk invisibly.  If the file is the server's log, it might mean that
logging is effectively broken and any problems the server experiences could be
undiagnosable.

If there is more than one mysqld executing on the system, then only the first
process's files are checked.  This plugin probably works best on Linux, though
it might work on other operating systems.

=head1 DOWNLOADING

Visit L<http://www.percona.com/software/percona-monitoring-plugins/> to download
the latest release of Percona Monitoring Plugins.

=head1 AUTHORS

Baron Schwartz

=head1 COPYRIGHT, LICENSE, AND WARRANTY

This program is copyright 2012 Baron Schwartz, 2012 Percona Inc.
Feedback and improvements are welcome.

THIS PROGRAM IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, version 2; OR the Perl Artistic License.  On UNIX and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA  02111-1307  USA.

=head1 VERSION

Percona Monitoring Plugins pmp-check-mysql-deleted-files 1.0.0

=cut

DOCUMENTATION
